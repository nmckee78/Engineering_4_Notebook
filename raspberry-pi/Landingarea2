import board # See landing area 1 for the rest of the comments
import time
from adafruit_display_shapes.triangle import Triangle
from adafruit_display_shapes.line import Line
from adafruit_display_shapes.circle import Circle
import busio
import displayio
import terminalio
import adafruit_displayio_ssd1306
from adafruit_display_text import label
displayio.release_displays()

sda_pin = board.GP16 # These set up the oled board
scl_pin = board.GP17
i2c = busio.I2C(scl_pin, sda_pin) 
display_bus = displayio.I2CDisplay(i2c, device_address = 0x3d, reset = board.GP15) 
display = adafruit_displayio_ssd1306.SSD1306(display_bus, width=128, height=64)

def tri_area(x1y1, x2y2, x3y3):
    try:
      Ax = float(x1y1[0]) 
      Ay = float(x1y1[1]) 
      Bx= float(x2y2[0])
      By = float(x2y2[1])
      Cx = float(x3y3[0])
      Cy = float(x3y3[1])
      area = abs(Ax*(By-Cy) + Bx*(Cy - Ay) + Cx*(Ay - By))/2 
      splash = displayio.Group() # Starts the display group
      print(f"\nThe area of the triangle with the coordinates ({Ax},{Ay}), ({Bx},{By}), ({Cx},{Cy}) is {area} km squared")
      hline = Line(0,32,128,32, color=0xFFFF00) # This sets the coordinates and the color of the x-axis line
      splash.append(hline) # This adds it to the display group 
      vline = Line(64,64,64,0, color=0xFFFF00) # This sets the coordinates and the color of the y-axis line
      splash.append(vline) 
      triangle = Triangle(int(Ax+64), int(-Ay+32), int(Bx+64), int(-By+32), int(Cx+64), int(-Cy+32), outline=0xFFFF00) # Sets the coordinates and color for the triangle
      splash.append(triangle)
      title = f"Area: {area}" # Adds the area to the display group
      text_area = label.Label(terminalio.FONT, text = title, color = 0xFFFF00, x = 5, y= 5) # Sets the color and coordinates for the text
      splash.append(text_area) 
      display.show(splash) # Sends the entire display group to the Oled 
      return area
    except: 
        print("\nThese values don't work, please type in new ones") # If there are any errors in the values it'll send this message
cont = False 
while not cont:
    start = input("\nType 'start' to begin, or type -q to quit: ").lower() 
    if start == "-q": 
        cont = True 
    else:
        coord_1 = input("\nInput first coordinate in format x,y: ") 
        x1y1 = coord_1.split(",") 

        coord_2 = input("\nInput second coordinate in format x,y: ") 
        x2y2 = coord_2.split(",") 

        coord_3 = input("\nInput third coordinate in format x,y: ") 
        x3y3 = coord_3.split(",")  
        tri_area(x1y1, x2y2, x3y3) 

    
